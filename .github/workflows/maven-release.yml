name: Maven Deploy

on:
  workflow_dispatch:  # Manual trigger without inputs

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6

      - name: Configure GPG for CI environment
        # Create GPG config directory, bypass dialogs and terminal, use GPG agent, allow GPG to get passphrase directly
        run: |
          mkdir -p ~/.gnupg
          echo "pinentry-mode loopback" > ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" > ~/.gnupg/gpg-agent.conf
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "batch" >> ~/.gnupg/gpg.conf
          echo "no-tty" >> ~/.gnupg/gpg.conf
          chmod 700 ~/.gnupg


      - name: Set up JDK
        # Handles importing GPG private key to the local keyring and configures Maven to use GPG passphrase
        # if pom.xml has the Maven GPG plugin configured
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: ossrh  # Must match server ID in settings.xml/pom.xml
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          # The private key is not required as a standard environment variable
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Deploy to Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.AEROSPIKE_SA_CICD_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.AEROSPIKE_SA_CICD_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASS }}
          GPG_TTY: "" # Tell GPG not to use terminal
        # No interactive prompts, cleaner logs
        run: mvn --batch-mode clean deploy
