name: Maven Deploy

on:
  workflow_dispatch: # Manual trigger without inputs

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: ossrh  # Must match server id in settings.xml/pom.xml
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          # The private key is not required as a standard environment variable
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}

      - name: Create settings-security.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings-security.xml <<EOF
          <settingsSecurity>
            <master>{jSMOWnoPFgsHVpMvz5VrIt5kRbzGpI8u+9EF1iFQyJQ=}</master>
          </settingsSecurity>
          EOF

      - name: Configure GPG
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASS }}
        run: |
          # Allow GPG agent to accept loopback pinentry, kill gpg-agent
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent
          
          # Cache passphrase by signing pom.xml (actual signing will take place during deploy), gpg-agent is restarted
          echo "${MAVEN_GPG_PASSPHRASE}" | gpg --pinentry-mode loopback --passphrase-fd 0 --batch --yes --no-tty --armor --detach-sign pom.xml
          rm -f pom.xml.asc

      - name: Deploy to Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.AEROSPIKE_SA_CICD_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.AEROSPIKE_SA_CICD_PASSWORD }}
          GPG_TTY: no-tty
        # Use batch mode: no interactive prompts, cleaner logs
        run: mvn --batch-mode clean deploy -Dgpg.passphrase="${MAVEN_GPG_PASSPHRASE}"